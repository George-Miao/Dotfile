// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "f5 down",
    "command": "editor.action.transformToLowercase"
  },
  {
    "key": "f5 up",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "alt+ctrl+left",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "alt+ctrl+right",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "shift+ctrl+down",
    "command": "rust-analyzer.moveItemDown"
  },
  {
    "key": "shift+ctrl+up",
    "command": "rust-analyzer.moveItemUp"
  },
  {
    "key": "ctrl+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+ctrl+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+space",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+ctrl+s",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "alt+ctrl+m",
    "command": "trailing-spaces.deleteTrailingSpacesModifiedLinesOnly"
  },
  {
    "key": "alt+[",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "alt+]",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "shift+ctrl+j",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "shift+ctrl+k",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "shift+ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+ctrl+enter",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+left",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "-cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorWordLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-cursorWordLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "cursorWordRight"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorWordRightSelect"
  },
  {
    "key": "ctrl+shift+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "alt+backspace",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+delete",
    "command": "-deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+left",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+right",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 3
    },
    "when": "editorTextFocus"
  },
  {
    "key": "alt+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 3
    },
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+f10",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "shift+alt+enter",
    "command": "rust-analyzer.onEnter"
  },
]